#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Get the local directory (where the script is located)
source variables.sh

# Function to create a virtual environment
create_env() {
	echo -e "\n********* Creating Virtual Environment **********************"
	echo "  Creating virtual environment in $VENV"
	echo -e "Using shell: $SHELL"
  # Check if python3 exists
   if command -v python3 &> /dev/null
   then
      python3 entrypoint.py
   elif command -v python &> /dev/null
   then
      python entrypoint.py
   else
      echo "Python is not installed. Please install Python and try again."
      exit 1
   fi
	echo -e "\n************************************************************"
	echo -e "\nVirtual environment created"
	echo -e "\n************************************************************\n"
}

info() {
  	echo -e "\n************************************************************"
  	echo -e "\n To generate your example add-on, run the command"
  	echo -e "\n   addon create <destination_dir>"
  	echo -e "\n************************************************************"
}

# Call the function
create_env

# Write the path of the virtual environment to a file
echo "$VENV" > "$ADDON_VENV_FILE"

"$VENV"/bin/python -m build

version=$(grep 'version =' pyproject.toml | sed 's/version = //g' | tr -d '"')
echo "seeq-addon-template version: $version"

"$VENV"/bin/pip install dist/addon-"$version"-py3-none-any.whl -U

chmod +x "$ADDON_SCRIPT_PATH"
cp "$ADDON_SCRIPT_PATH" "$ADDON_SCRIPT_LOCAL_PATH"
cp "$ADDON_VENV_FILE" "$ADDON_VENV_FILE_LOCAL_PATH"

files_to_check=(~/.bashrc ~/.zshrc)

# Loop over the files
for file in "${files_to_check[@]}"; do
    if grep -Fxq "$PATH_START_MARKER" "$file"; then
      echo "Path already in $file"
    else
      echo "Adding path to $file"
      echo "$ADD_TO_PATH" >> "$file"
    fi
done


info
