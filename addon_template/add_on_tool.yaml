addOnTool_prompts:
  type: str
  help: "\n\n ***************** AddOnTool Element Configuration *****************"
  default: Press enter to continue
  when: "{{ 'AddOnTool' in elements_to_include }}"

addOnTool_description:
  type: str
  help: Enter description of the Add-on Tool element
  placeholder: (This is the short description of the Add-on Tool just below the name in workbench or the homescreen
  validator: >-
    {% if not addOnTool_description %}
    description cannot be empty
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include }}"

addOnTool_location:
  type: str
  help: Enter where the Add-on Tool is located
  choices:
    - toolsPane
    - homescreen
  validator: >-
    {% if not addOnTool_location %}
    Please choose one option
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include }}"

addOnTool_launch_type:
  type: str
  help: Enter how the Add-on Tool should be launched
  choices:
    - window
    - tab
    - none
  validator: >-
    {% if not addOnTool_launch_type %}
    Please choose one option
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include }}"

addOnTool_window_details:
  type: str
  help: You can optionally pass window (comma-separated) settings.
  default: toolbar=0,location=0,scroll
  when: "{{ 'AddOnTool' in elements_to_include and addOnTool_location == 'window'}}"

addOnTool_advanced:
  type: bool
  default: no
  help: >-
    Do you want to specify any of these advanced settings for the Add-on Tool element? If unsure, press enter.

        - Add-on Tool Name: Show a different name for the AddOnTool in the Add-on Manager vs. Workbench
        - Add-on Tool Icon: Show a different icon for the AddOnTool in the Add-on Manager vs. Workbench
        - Project Properties: Add additional configuration values required by the Add-on during runtime
  when: "{{ 'AddOnTool' in elements_to_include }}"

advanced_previous_answers:
  type: str
  default: Press enter to continue with advanced settings
  help: >-
    You can't skip some of the advanced settings, since you have previously selected 'Yes' to the advanced settings 
    
    for the Add-on Tool element. If you don't want to see this message the next time you run this utility,
    
    you can delete the answers for these questions in the `.copier-answers.yml` file before running the utility.

  when: "{{ 'AddOnTool' in elements_to_include and not addOnTool_advanced and (addOnTool_name or addOnTool_icon or addOnTool_project_properties_question) }}"

addOnTool_name:
  type: str
  help: Enter AddOnTool element name
  placeholder: (This is the name of the Add-on Tool in workbench or the homescreen )
  default: "{{ project_name }}"
  validator: >-
    {% if not (addOnTool_name | regex_search('^[A-Za-z][A-Za-z0-9 _-]*$')) %}
    name of the AddOnTool element must start with a letter and cannot contain any symbols.
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include and (addOnTool_advanced or addOnTool_name)}}"

addOnTool_icon:
  type: str
  help: Enter icon (see https://fontawesome.com/v4.7.0/icons/) # TODO: This list is not correct
  default: "{{ project_icon }}"
  placeholder: (This icon will be shown next to the Add-on Tool name in workbench under Tools > Add-ons )
  validator: >-
    {% if not addOnTool_icon %}
    icon cannot be empty
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include and (addOnTool_advanced or addOnTool_icon) }}"

addOnTool_project_properties_question:
  type: bool
  help: Does the Add-on Tool require any additional configuration values during runtime? (e.g. choose No if you don't know what this is)
  default: no
  validator: >-
    {% if not addOnTool_project_properties_question %}
    Please choose one option
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include and (addOnTool_advanced or addOnTool_project_properties_question) }}"

addOnTool_project_properties:
  type: json
  help: "You can pass configuration properties as a json object that will appeared in the Data Lab project hosting 
  the Add-on tool. \nThe json object must have the following schema for each property:
   \n{\"prop\": {\"type\": \"object|string|bool\", \"default\": \"prop_value\". 
   \n For example, {\"prop1\": {\"type\": \"string\", \"default\": \"value1\"}, \"prop2\": {\"type\": \"bool\", \"default\": true}}\n\n
   \n\nPaste your json object here:"
  placeholder: "{}"
  #  validator: "{ addOnTool_project_properties is jsonschema({'type': 'integer', 'minimum': 0}) }}"
  when: "{{ 'AddOnTool' in elements_to_include and addOnTool_project_properties_question}}"

addOnTool_project_required_properties_question:
  type: bool
  help: Are any of these additional properties required?
  default: no
  choices:
    - "Yes"
    - "No"
  when: "{{ 'AddOnTool' in elements_to_include and addOnTool_project_properties_question}}"

addOnTool_project_required_properties:
  type: str
  help: What is the list of required additional properties? (Each property must be enclosed by double quotes and separated by commas)
  default: ""
  validator: >-
    {% if not (addOnTool_project_required_properties | regex_search('^"([^"]*)"( *, *"([^"]*)")*$')) %}
    each property must be enclosed by double quotes and properties must be separated by commas (e.g. "prop1", "prop2")
    {% endif %}
  when: "{{ 'AddOnTool' in elements_to_include and addOnTool_project_required_properties_question}}"
